name: Examples Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  examples-tests:
    runs-on: [self-hosted, Linux, X64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify CUDA installation (HPC SDK)
      run: |
        nvcc --version
        nvidia-smi
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        
    - name: Create build directory
      run: mkdir -p build
      
    - name: Configure with CMake (for dependencies)
      run: |
        cd build
        cmake .. -DCUDA_ARCH=AUTO  # Auto-detect your GPU architecture
        
    - name: Build project dependencies
      run: |
        cd build
        cmake --build . --target doctest -j$(nproc) || echo "Doctest target not found, continuing..."
        
    - name: Run examples script in test mode
      run: |
        chmod +x scripts/run-examples.sh
        ./scripts/run-examples.sh --test
        
    - name: Run examples script in normal mode (fallback if no expected outputs)
      if: failure()  # Only run if test mode fails (likely due to missing expected outputs)
      run: |
        echo "Test mode failed, running in normal mode..."
        ./scripts/run-examples.sh --run
        
  # Separate job to capture expected outputs (can be run manually)
  capture-expected-outputs:
    runs-on: [self-hosted, Linux, X64]
    if: github.event_name == 'workflow_dispatch'  # Only run when manually triggered
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify CUDA installation (HPC SDK)
      run: |
        nvcc --version
        nvidia-smi
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        
    - name: Create build directory
      run: mkdir -p build
      
    - name: Configure with CMake (for dependencies)
      run: |
        cd build
        cmake .. -DCUDA_ARCH=AUTO  # Auto-detect your GPU architecture
        
    - name: Build project dependencies
      run: |
        cd build
        cmake --build . --target doctest -j$(nproc) || echo "Doctest target not found, continuing..."
        
    - name: Capture expected outputs
      run: |
        chmod +x scripts/run-examples.sh
        ./scripts/run-examples.sh --capture
        
    - name: Upload expected outputs as artifact
      uses: actions/upload-artifact@v4
      with:
        name: expected-outputs
        path: scripts/expected_outputs/
        retention-days: 30